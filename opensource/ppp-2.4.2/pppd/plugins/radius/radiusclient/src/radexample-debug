#! /bin/sh

# radexample - temporary wrapper script for .libs/radexample
# Generated by ltmain.sh - GNU libtool 1.0
#
# The radexample program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of `/home/dfs/Servpoet/radiusclient-0.3.1/src'.
# If it is, it will not operate correctly.

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variables:
  link_against_libtool_libs=' ../lib/libradiusclient.la'
  finalize_command='gcc -g -O2 -o .libs/radexampleT radexample.o -Wl,-rpath -Wl,/usr/lib -L/usr/lib -lradiusclient -lcrypt -lnsl'
else
  # Find the directory that this script lives in.
  thisdir=`echo $0 | sed 's%/[^/]*$%%'`
  test "x$thisdir" = "x$0" && thisdir=.

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  progdir="$thisdir/.libs"
  program="radexample"

  if test -f "$progdir/$program"; then
    # Run the actual program with our arguments.
    args=
    for arg
    do
      # Quote arguments (to preserve shell metacharacters).
      args="$args '$arg'"
    done

    # Export the path to the program.
    PATH="$progdir:$PATH"
    export PATH

    # Add our own library path to LD_LIBRARY_PATH
    LD_LIBRARY_PATH="$thisdir/../lib/.libs:$LD_LIBRARY_PATH"

    # Some systems cannot cope with colon-terminated LD_LIBRARY_PATH
    LD_LIBRARY_PATH=`echo $LD_LIBRARY_PATH | sed -e 's/:*$//'`

    export LD_LIBRARY_PATH

    eval "exec ddd ./.libs/$program $args"

    echo "$0: cannot exec $program $args"
    exit 1
  else
    # The program doesn't exist.
    echo "$0: error: $progdir/$program does not exist" 1>&2
    echo "This script is just a wrapper for $program." 1>&2
    echo "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi
